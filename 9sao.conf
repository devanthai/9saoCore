
user nginx;
worker_processes auto;
worker_rlimit_nofile 100000;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 4000;
	use epoll;
    multi_accept on;
}

http {
	
    # cache thông tin về FDs (file descriptors), files thường xuyên truy cập
    # có thể tăng hiệu suất, nhưng bạn cũng cần test các giá trị này
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # để boost I/O trên HDD, chúng ta có thể disable access log
    access_log off;

    # sao chép data
    # nhanh hơn đọc + ghi
    sendfile on;

    # gửi header trong 1 cục thay vì gửi từng cái
    tcp_nopush on;

    # không buffer data sent, tốt cho dữ liệu nhỏ trong thời gian thực
    tcp_nodelay on;

    # giảm data cần gửi qua network (cho môi trường test)
    gzip on;
    # gzip_static on;
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html luôn luôn được nén bởi HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # cho phép server đóng connection với client không còn được tương tác, nó sẽ giúp giải phóng bộ nhớ
    reset_timedout_connection on;

    # request timed out, mặc định là 60s
    client_body_timeout 10;

    # nếu client ngừng tương tác, giải phóng bộ nhớ, mặc định là 60s
    send_timeout 2;

    # set thời gian server sẽ đóng connection, mặc định là 75s
    keepalive_timeout 30;

    # số lượng request từ client có thể thực hiện liên tục (cho môi trường test)
    keepalive_requests 100000;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;


    # giới hạn số lượng connections với mỗi IP
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # giới hạn số lượng reqest cho session
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=1r/s;
    server {
        limit_conn conn_limit_per_ip 1;
        limit_req zone=req_limit_per_ip burst=1 nodelay;
    }


    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;


        location ^~ /socket {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        include /etc/nginx/default.d/*.conf;
	
	
        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}